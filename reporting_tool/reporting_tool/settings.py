"""
Django settings for reporting_tool project.

Generated by 'django-admin startproject' using Django 4.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import tempfile

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7j2a!2kaa*a1w)#_rgf&b_)if39-6n4(a1brv51lgu@h(zm8x8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'reporting',
    'martor',
    'django_summernote',
    'adminlte3',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'reporting_tool.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'reporting_tool.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'
STATICFILES_DIRS = (
  os.path.join(BASE_DIR, 'static/'),
)

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# STATIC_ROOT = os.path.join(tempfile.gettempdir(), 'static')

CSRF_COOKIE_HTTPONLY = False

# # Imgur API Keys
# MARTOR_IMGUR_CLIENT_ID = 'feab049ed67ccdd'
# MARTOR_IMGUR_API_KEY   = '9c44d531167cd899bf32d4396d04f226700880c4'
# # SECRET = '9c44d531167cd899bf32d4396d04f226700880c4'

# # --------------------------- MARTOR ------------------------------------

# # Choices are: "semantic", "bootstrap"
# MARTOR_THEME = 'bootstrap'

# # Global martor settings
# # Input: string boolean, `true/false`
# MARTOR_ENABLE_CONFIGS = {
#     'emoji': 'false',       # to enable/disable emoji icons.
#     'imgur': 'true',        # to enable/disable imgur/custom uploader.
#     'mention': 'false',     # to enable/disable mention
#     'jquery': 'true',       # to include/revoke jquery (require for admin default django)
#     'living': 'false',      # to enable/disable live updates in preview
#     'spellcheck': 'false',  # to enable/disable spellcheck in form textareas
#     'hljs': 'true',         # to enable/disable hljs highlighting in preview
# }

# # To show the toolbar buttons
# MARTOR_TOOLBAR_BUTTONS = [
#     'bold', 'italic', 'horizontal', 'heading', 'pre-code',
#     'blockquote', 'unordered-list', 'ordered-list',
#     'link', 'image-link', 'image-upload', 'emoji', 
#     'direct-mention', 'toggle-maximize', 'help'
# ]

# # To setup the martor editor with title label or not (default is False)
# MARTOR_ENABLE_LABEL = False

# # Markdownify
# MARTOR_MARKDOWNIFY_FUNCTION = 'martor.utils.markdownify' # default
# MARTOR_MARKDOWNIFY_URL = '/martor/markdownify/' # default

# # Markdown extensions (default)
# MARTOR_MARKDOWN_EXTENSIONS = [
#     'markdown.extensions.extra',
#     'markdown.extensions.nl2br',
#     'markdown.extensions.smarty',
#     'markdown.extensions.fenced_code',

#     # Custom markdown extensions.
#     'martor.extensions.urlize',
#     'martor.extensions.del_ins',      # ~~strikethrough~~ and ++underscores++
#     'martor.extensions.mention',      # to parse markdown mention
#     'martor.extensions.emoji',        # to parse markdown emoji
#     'martor.extensions.mdx_video',    # to parse embed/iframe video
#     'martor.extensions.escape_html',  # to handle the XSS vulnerabilities
# ]

# # Markdown Extensions Configs
# MARTOR_MARKDOWN_EXTENSION_CONFIGS = {}

# CSRF_COOKIE_HTTPONLY = False

# # Upload to locale storage
# # MARTOR_UPLOAD_PATH = os.path.join(MEDIA_ROOT, 'images/uploads')
# # MARTOR_UPLOAD_URL = '/api/uploader/'  # change to local uploader
# # MARTOR_MEDIA_URL = os.path.join(PETEREPORT_MARKDOWN['media_host'], MEDIA_URL)

# MARTOR_MARKDOWN_BASE_EMOJI_URL = 'https://github.githubassets.com/images/icons/emoji/'                  # default from github


# Maximum Upload Image
# 2.5MB - 2621440
# 5MB - 5242880
# 10MB - 10485760
# 20MB - 20971520
# 50MB - 5242880
# 100MB 104857600
# 250MB - 214958080
# 500MB - 429916160
MAX_IMAGE_UPLOAD_SIZE = 5242880  # 5MB




# URL schemes that are allowed within links
ALLOWED_URL_SCHEMES = [
    "file", "http", "https", "data"
]

# https://gist.github.com/mrmrs/7650266
ALLOWED_HTML_TAGS = [
    "a", "abbr", "b", "blockquote", "br", "cite", "code", "command",
    "dd", "del", "dl", "dt", "em", "fieldset", "h1", "h2", "h3", "h4", "h5", "h6",
    "hr", "i", "iframe", "img", "input", "ins", "kbd", "label", "legend",
    "li", "ol", "optgroup", "option", "p", "pre", "small", "span", "strong",
    "sub", "sup", "table", "tbody", "td", "tfoot", "th", "thead", "tr", "u", "ul"
]

# https://github.com/decal/werdlists/blob/master/html-words/html-attributes-list.txt
ALLOWED_HTML_ATTRIBUTES = [
    "alt", "class", "color", "colspan", "datetime",  "data",
    "height", "href", "id", "name", "reversed", "rowspan",
    "scope", "src", "style", "title", "type", "width"
]
